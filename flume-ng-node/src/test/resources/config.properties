# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Name the components on this agent
${name}.sources = source1
${name}.sinks = k1
${name}.channels = c1

# Describe/configure the source


<#if sourceType == 'HTTP'>
${name}.sources.source1.type = http
${name}.sources.source1.port = ${port}
<#elseif sourceType == 'KAFKA' >
${name}.sources.source1.type = org.apache.flume.source.kafka.KafkaSource
${name}.sources.source1.bootstrap.servers = ${kafkaSource.servers}
${name}.sources.source1.topics = ${kafkaSource.topics}
${name}.sources.source1.consumer.group.id = ${kafkaSource.group}
		<#if kafkaSource.topicsRegex??>
${name}.sources.source1.regex = ${kafkaSource.topicsRegex}
	     </#if>
	     <#if kafkaSource.batchSize??>
${name}.sources.source1.batchSize = ${kafkaSource.batchSize}
	     </#if>
</#if> 





# Describe the sink
<#if sinkType == 'ES'>
${name}.sinks.k1.type = elasticsearch
	<#if esSink.indexName??>
${name}.sinks.k1.indexName = ${esSink.indexName}
	</#if>
	<#if esSink.indexType??>
${name}.sinks.k1.indexType = ${esSink.indexType}
	</#if>
		<#if esSink.clusterName??>
${name}.sinks.k1.clusterName = ${esSink.clusterName}
	</#if>
<#elseif sinkType == 'HDFS' >
${name}.sinks.k1.type = hdfs
${name}.sinks.k1.hdfs.path=${hdfsSink.path}
	<#if hdfsSink.filePrefix??>
${name}.sinks.k1.hdfs.filePrefix=${hdfsSink.filePrefix}
	</#if>
</#if>


# Use a channel which buffers events in memory
${name}.channels.c1.type = memory
${name}.channels.c1.capacity = 1000
${name}.channels.c1.transactionCapacity = 100

# Bind the source and sink to the channel
${name}.sources.source1.channels = c1
${name}.sinks.k1.channel = c1